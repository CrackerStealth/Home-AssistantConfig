- id: alert_hot_tub_temperature_low
  alias: 'Alert: Hot Tub Temperature Low'
  trigger:
    - platform: numeric_state
      entity_id: sensor.hot_tub_temperature_01
      below: 38
      for:
        minutes: 5
  action:
    - service: notify.armoury_pushover
      data:
        message: Hot tub has been below temperature for 5 minutes.
        title: 'The Armoury: Hot Tub'
        data:
          priority: 1
- id: alert_rain_detected
  alias: 'Alert: Rain Detected'
  trigger:
    - platform: state
      entity_id: binary_sensor.opensprinkler_rain_sensor
      from: 'off'
      to: 'on'
  action:
    - service: notify.armoury_pushover
      data:
        message: Sprinklers have been disabled because rain was detected.
        title: 'The Armoury: Rain Detected'
        data:
          priority: 0
- id: alert_rain_not_detected
  alias: 'Alert: Rain Not Detected'
  trigger:
    - platform: state
      entity_id: binary_sensor.opensprinkler_rain_sensor
      from: 'on'
      to: 'off'
  action:
    - service: notify.armoury_pushover
      data:
        message: Sprinklers have been enabled after rain detection has dried up.
        title: 'The Armoury: Rain Detection Timed Out'
        data:
          priority: 0
- id: alert_garage_door_closed
  alias: 'Alert: Garage Door Closed'
  trigger:
    - platform: state
      entity_id: binary_sensor.garage_main_door
      from: 'on'
      to: 'off'
  action:
    - service: notify.armoury_pushover
      data:
        message: Garage door was closed.
        title: 'The Armoury: Garage'
        data:
          priority: 0
- id: alert_garage_door_opened
  alias: 'Alert: Garage Door Opened'
  trigger:
    - platform: state
      entity_id: binary_sensor.garage_main_door
      from: 'off'
      to: 'on'
  action:
    - service: notify.armoury_pushover
      data:
        message: Garage door was opened.
        title: 'The Armoury: Garage'
        data:
          priority: 0
- id: alert_front_door_unlocked
  alias: 'Alert: Front Door Unlocked'
  trigger:
    - platform: state
      entity_id: lock.front_entry_door_lock_01
      from: locked
      to: unlocked
  action:
    - service: notify.armoury_pushover
      data:
        message: Front door was unlocked.
        title: 'The Armoury: House'
        data:
          priority: -1
- id: alert_side_door_unlocked
  alias: 'Alert: Side Door Unlocked'
  trigger:
    - platform: state
      entity_id: lock.side_entry_door_lock_01
      from: locked
      to: unlocked
  action:
    - service: notify.armoury_pushover
      data:
        message: Side door was unlocked.
        title: 'The Armoury: House'
        data:
          priority: -1
- id: alert_front_door_opened
  alias: 'Alert: Front Door Opened'
  trigger:
    - platform: state
      entity_id: binary_sensor.front_entry_door_sensor_01
      from: 'off'
      to: 'on'
  action:
    - service: notify.armoury_pushover
      data:
        message: Front door was opened.
        title: 'The Armoury: House'
        data:
          priority: 0
- id: alert_side_door_opened
  alias: 'Alert: Side Door Opened'
  trigger:
    - platform: state
      entity_id: binary_sensor.side_entry_door_sensor_01
      from: 'off'
      to: 'on'
  action:
    - service: notify.armoury_pushover
      data:
        message: Side door was opened.
        title: 'The Armoury: House'
        data:
          priority: 0
- id: alert_master_bedroom_high_heat
  alias: 'Alert: High Heat In Master Bedroom'
  trigger:
    - platform: numeric_state
      entity_id: sensor.master_bedroom_multisensor_01_temperature
      above: 26.5
  action:
    - service: notify.armoury_pushover
      data:
        message: Master bedroom has high heat!
        title: 'The Armoury: House'
        data:
          priority: 1
    - service: switch.turn_off
      data:
        entity_id: switch.master_bedroom_switch_01
- id: alert_master_bedroom_fireplace_turned_on
  alias: 'Alert: Master Bedroom Fireplace Turned On'
  trigger:
    - platform: state
      entity_id: switch.master_bedroom_switch_01
      from: 'off'
      to: 'on'
  action:
    - service: notify.armoury_pushover
      data:
        message: Master bedroom fireplace turned on.
        title: 'The Armoury: House'
        data:
          priority: -2
- id: alert_master_bedroom_fireplace_turned_off
  alias: 'Alert: Master Bedroom Fireplace Turned Off'
  trigger:
    - platform: state
      entity_id: switch.master_bedroom_switch_01
      from: 'on'
      to: 'off'
  action:
    - service: notify.armoury_pushover
      data:
        message: Master bedroom fireplace turned off.
        title: 'The Armoury: House'
        data:
          priority: -2
- id: alert_home_temperature_too_low
  alias: 'Alert: Home Temperature Too Low'
  trigger:
    - platform: numeric_state
      entity_id: sensor.ELINA_Thermostat_temperature
      below: 16
  action:
    - service: notify.armoury_pushover
      data:
        message: Home temperature dropped below 16 degrees celcius.
        title: 'The Armoury: House'
        data:
          priority: 0
- id: alert_home_temperature_too_high
  alias: 'Alert: Home Temperature Too High'
  trigger:
    - platform: numeric_state
      entity_id: sensor.ELINA_Thermostat_temperature
      above: 24
  action:
    - service: notify.armoury_pushover
      data:
        message: Home temperature is above 24 degrees celcius.
        title: 'The Armoury: House'
        data:
          priority: 1
- id: alert_3d_print_completed
  alias: 'Alert: 3D Print Completed'
  trigger:
    - platform: state
      entity_id: binary_sensor.sadi_printing
      from: 'on'
      to: 'off'
  action:
    - service: notify.armoury_pushover
      data:
        message: 3D print job is now complete.
        title: 'The Armoury: House'
        data:
          priority: 0
- id: alert_3d_print_error
  alias: 'Alert: 3D Print Error'
  trigger:
    - platform: state
      entity_id: binary_sensor.sadi_printing_error
      from: 'off'
      to: 'on'
  action:
    - service: notify.armoury_pushover
      data:
        message: An error occurred while a 3D print was being made!
        title: 'The Armoury: House'
        data:
          priority: 1
- id: alert_garage_controller_offline
  alias: 'Alert: Garage Controller Offline'
  trigger:
    - platform: state
      entity_id: binary_sensor.garage_controller
      from: 'on'
      to: 'off'
      for:
        minutes: 30
  action:
    - service: notify.armoury_pushover
      data:
        message: The garage controller is no longer available on the network.
        title: 'The Armoury: Garage Controller'
        data:
          priority: 1
- id: opensprinkler_controller_offline
  alias: 'Alert: OpenSprinkler Offline'
  trigger:
    - platform: state
      entity_id: binary_sensor.opensprinkler_controller
      from: 'on'
      to: 'off'
      for:
        minutes: 30
  action:
    - service: notify.armoury_pushover
      data:
        message: The OpenSprinkler controller is no longer available on the network.
        title: 'The Armoury: OpenSprinkler Controller'
        data:
          priority: 1
- id: alert_hottub_temp_sensor_offline
  alias: 'Alert: Hot Tub Temeprature Service Offline'
  trigger:
    - platform: state
      entity_id: binary_sensor.hot_tub_status
      from: 'on'
      to: 'off'
      for:
        minutes: 30
  action:
    - service: notify.armoury_pushover
      data:
        message: The garage controller is no longer available on the network.
        title: 'The Armoury: Garage Controller'
        data:
          priority: 1
- id: alert_vpn_offline
  alias: 'Alert: VPN Server Offline'
  trigger:
    - platform: state
      entity_id: binary_sensor.vpn_server
      from: 'on'
      to: 'off'
      for:
        minutes: 30
  action:
    - service: notify.armoury_pushover
      data:
        message: The VPN server is no longer available on the network.
        title: 'The Armoury: VPN Service'
        data:
          priority: 1
- id: alert_garage_open_too_long
  alias: 'Alert: Garage Open Too Long'
  trigger:
    - platform: state
      entity_id: binary_sensor.garage_main_door
      from: 'off'
      to: 'on'
      for:
        minutes: 30
  action:
    - service: notify.armoury_pushover
      data:
        message: The garage door has been open for too long. Over 30 minutes.
        title: 'The Armoury: Garage Door Security'
        data:
          priority: 1
- id: alarm_away_triggers
  alias: 'Alarm: Triggers When Set to Away'
  trigger:
    - platform: state
      entity_id: binary_sensor.master_bedroom_multisensor_01_motion_sensor
      from: 'off'
      to: 'on'
  condition:
    - condition: state
      entity_id: alarm_control_panel.armoury_alarm_system
      state: armed_away
  action:
    - service: alarm_control_panel.alarm_trigger
      data:
        entity_id: alarm_control_panel.armoury_alarm_system
- id: alarm_home_triggers
  alias: 'Alarm: Triggers When Set to Home'
  trigger:
    - platform: state
      entity_id: binary_sensor.master_bedroom_multisensor_01_motion_sensor
      from: 'off'
      to: 'on'
  condition:
    - condition: state
      entity_id: alarm_control_panel.armoury_alarm_system
      state: armed_home
  action:
    - service: alarm_control_panel.alarm_trigger
      data:
        entity_id: alarm_control_panel.armoury_alarm_system
- id: alarm_night_triggers
  alias: 'Alarm: Triggers When Set to Night'
  trigger:
    - platform: state
      entity_id: binary_sensor.master_bedroom_multisensor_01_motion_sensor
      from: 'off'
      to: 'on'
  condition:
    - condition: state
      entity_id: alarm_control_panel.armoury_alarm_system
      state: armed_night
  action:
    - service: alarm_control_panel.alarm_trigger
      data:
        entity_id: alarm_control_panel.armoury_alarm_system
- id: alarm_disarm_keypad_used
  alias: 'Alarm: Disarm When Keypad Used'
  trigger:
    - platform: state
      entity_id: sensor.front_entry_door_lock_01_alarm_type
      to: '19'
    - platform: state
      entity_id: sensor.side_entry_door_lock_01_alarm_type
      to: '19'
  action:
    - service: alarm_control_panel.alarm_disarm
      data:
        entity_id: alarm_control_panel.armoury_alarm_system
- id: alarm_triggered
  alias: 'Alarm: Perform Actions When Triggered'
  trigger:
    - platform: state
      entity_id: alarm_control_panel.armoury_alarm_system
      to: 'triggered'
  action:
    - service: notify.armoury_pushover
      data:
        message: Alarm System Has Been Triggered!
        title: 'The Armoury: Home'
        data:
          priority: 1
- id: react_front_entry_dimmer_01_double_tap_on
  alias: 'React: Front Entry Dimmer 1 (Double Tap On)'
  trigger:
    - platform: event
      event_type: zwave.scene_activated
      event_data:
        entity_id: zwave.front_entry_dimmer_01
        scene_id: 1
        scene_data: 3
  action:
    - service: light.turn_on
      data:
        entity_id: light.living_room_dimmer_01
        brightness: 255
- id: react_front_entry_dimmer_01_double_tap_off
  alias: 'React: Front Entry Dimmer 1 (Double Tap Off)'
  trigger:
    - platform: event
      event_type: zwave.scene_activated
      event_data:
        entity_id: zwave.front_entry_dimmer_01
        scene_id: 2
        scene_data: 3
  action:
    - service: light.turn_off
      data:
        entity_id: light.living_room_dimmer_01
- id: react_front_entry_dimmer_01_triple_tap_on
  alias: 'React: Front Entry Dimmer 1 (Triple Tap On)'
  trigger:
    - platform: event
      event_type: zwave.scene_activated
      event_data:
        entity_id: zwave.front_entry_dimmer_01
        scene_id: 1
        scene_data: 4
  action:
    - service: light.turn_on
      data:
        entity_id: light.chair_lamp
        brightness: 255
- id: react_front_entry_dimmer_01_triple_tap_off
  alias: 'React: Front Entry Dimmer 1 (Triple Tap Off)'
  trigger:
    - platform: event
      event_type: zwave.scene_activated
      event_data:
        entity_id: zwave.front_entry_dimmer_01
        scene_id: 2
        scene_data: 4
  action:
    - service: light.turn_off
      data:
        entity_id: light.chair_lamp
- id: react_guest_bedroom_dimmer_01_double_tap_on
  alias: 'React: Guest Bedroom Dimmer 1 (Double Tap On)'
  trigger:
    - platform: event
      event_type: zwave.scene_activated
      event_data:
        entity_id: zwave.guest_bedroom_dimmer_01
        scene_id: 1
        scene_data: 3
  action:
    - service: light.turn_on
      data:
        entity_id: light.basement_dimmer_01
        brightness: 255
- id: react_guest_bedroom_dimmer_01_double_tap_off
  alias: 'React: Guest Bedroom Dimmer 1 (Double Tap Off)'
  trigger:
    - platform: event
      event_type: zwave.scene_activated
      event_data:
        entity_id: zwave.guest_bedroom_dimmer_01
        scene_id: 2
        scene_data: 3
  action:
    - service: light.turn_off
      data:
        entity_id: light.basement_dimmer_01
- id: react_basement_dimmer_01_double_tap_on
  alias: 'React: Basement Dimmer 1 (Double Tap On)'
  trigger:
    - platform: event
      event_type: zwave.scene_activated
      event_data:
        entity_id: zwave.basement_dimmer_01
        scene_id: 1
        scene_data: 7860
  action:
    - service: light.turn_on
      data:
        entity_id: light.guest_bedroom_dimmer_01
        brightness: 255
- id: react_basement_dimmer_01_double_tap_off
  alias: 'React: Basement Dimmer 1 (Double Tap Off)'
  trigger:
    - platform: event
      event_type: zwave.scene_activated
      event_data:
        entity_id: zwave.basement_dimmer_01
        scene_id: 2
        scene_data: 7860
  action:
    - service: light.turn_off
      data:
        entity_id: light.guest_bedroom_dimmer_01
- id: react_accent_lights_off
  alias: 'React: Accent Lights Turn Off'
  trigger:
    - platform: state
      entity_id: input_select.accent_lights
      to: 'Off'
  action:
    - service: light.turn_off
      data:
        entity_id:
          - light.monica
          - light.shera
          - light.tamaki
          - light.hibiki
          - light.esdeath
- id: react_accent_lights_rainbow
  alias: 'React: Accent Lights Turn On (Rainbow)'
  trigger:
    - platform: state
      entity_id: input_select.accent_lights
      to: 'Rainbow'
  action:
    - service: light.turn_on
      data:
        entity_id:
          - light.monica
          - light.shera
          - light.tamaki
          - light.hibiki
          - light.esdeath
    - service: wled.effect
      data:
        entity_id:
          - light.monica
          - light.shera
          - light.tamaki
          - light.hibiki
          - light.esdeath
        effect: 'Rainbow'
        palette: 'Default'
        intensity: 128
        speed: 128
- id: react_accent_lights_halloween
  alias: 'React: Accent Lights Turn On (Halloween)'
  trigger:
    - platform: state
      entity_id: input_select.accent_lights
      to: 'Halloween'
  action:
    - service: light.turn_on
      data:
        entity_id:
          - light.monica
          - light.shera
          - light.tamaki
          - light.hibiki
          - light.esdeath
    - service: wled.effect
      data:
        entity_id:
          - light.monica
          - light.shera
          - light.tamaki
          - light.hibiki
          - light.esdeath
        effect: 'Halloween'
        palette: 'Default'
        intensity: 128
        speed: 128
- id: react_accent_lights_christmas
  alias: 'React: Accent Lights Turn On (Christmas)'
  trigger:
    - platform: state
      entity_id: input_select.accent_lights
      to: 'Christmas'
  action:
    - service: light.turn_on
      data:
        entity_id:
          - light.monica
          - light.shera
          - light.tamaki
          - light.hibiki
          - light.esdeath
    - service: wled.effect
      data:
        entity_id:
          - light.monica
          - light.shera
          - light.tamaki
          - light.hibiki
          - light.esdeath
        effect: 'Palette'
        palette: 'Sherbet'
        intensity: 128
        speed: 128
- id: react_accent_lights_northern_lights
  alias: 'React: Accent Lights Turn On (Northern Lights)'
  trigger:
    - platform: state
      entity_id: input_select.accent_lights
      to: 'Northern Lights'
  action:
    - service: light.turn_on
      data:
        entity_id:
          - light.monica
          - light.shera
          - light.tamaki
          - light.hibiki
          - light.esdeath
    - service: wled.effect
      data:
        entity_id:
          - light.monica
          - light.shera
          - light.tamaki
          - light.hibiki
          - light.esdeath
        effect: 'Palette'
        palette: 'Aurora'
        intensity: 128
        speed: 128
- id: timed_decore_automated_on_dec
  alias: 'Timed: Decore Automated On (December)'
  trigger:
    - platform: sun
      event: sunset
      offset: '00:30:00'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.accent_lights_auto
        state: 'on'
      - condition: state
        entity_id: input_select.accent_lights
        state: 'Off'
      - condition: template
        value_template: '{{ (now().strftime("%-m") | int) == 12 }}'
  action:
    - service: input_select.select_option
      entity_id: input_select.accent_lights
      data:
        option: 'Christmas'
- id: timed_decore_automated_on_jan
  alias: 'Timed: Decore Automated On (January)'
  trigger:
    - platform: sun
      event: sunset
      offset: '00:30:00'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.accent_lights_auto
        state: 'on'
      - condition: state
        entity_id: input_select.accent_lights
        state: 'Off'
      - condition: template
        value_template: '{{ (now().strftime("%-m") | int) == 1 }}'
  action:
    - service: input_select.select_option
      entity_id: input_select.accent_lights
      data:
        option: 'Northern Lights'
- id: timed_decore_automated_off
  alias: 'Timed: Decore Automated Off'
  trigger:
    - platform: time
      at: '23:00:00'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.accent_lights_auto
        state: 'on'
  action:
    - service: input_select.select_option
      entity_id: input_select.accent_lights
      data:
        option: 'Off'
- id: timed_nightly_backup
  alias: 'Timed: Nightly Backup'
  trigger:
    - platform: time
      at: '03:00:00'
  action:
    - service: hassio.addon_stop
      data:
        addon: "core_mariadb"
    - service: hassio.snapshot_full
      data_template:
        name: "{{ now().strftime('%Y%m%d-%H%M') }}-FullBackupNightly"
    - service: hassio.addon_start
      data:
        addon: "core_mariadb"
